type: "SNIPPET_NOTE"
folder: "4ff331626e7937f1a87a"
title: ""
description: ""
snippets: [
  {
    name: ""
    mode: "text"
    content: '''
      Task Slots and Resourcesî§‹
      Each worker (TaskManager) is a JVM process, and may execute one or more subtasks in separate threads.To control how many tasks a worker accepts, a worker has so called task slots (at least one).
      Each task slot represents a fixed subset of resources of the TaskManager. A TaskManager with three slots, for example,will dedicate 1/3 of its managed memory to each slot. Slotting the resources means that a subtask will not compete with subtasks from other jobs for managed memory, but instead has a certain amount of reserved managed memory. Note that no CPU isolation happens here; currently slots only separate the managed memory of tasks.
      By adjusting the number of task slots, users can define how subtasks are isolated from each other.Having one slot per TaskManager means each task group runs in a separate JVM (which can be started in aseparate container, for example). Having multiple slots means more subtasks share the same JVM. Tasks in the same JVM share TCP connections (via multiplexing) and heartbeat messages. They may also share data sets and data structures, thus reducing the per-task overhead.
    '''
  }
]
tags: []
isStarred: false
isTrashed: true
createdAt: "2017-09-21T18:39:44.556Z"
updatedAt: "2017-09-21T18:40:00.385Z"
