type: "MARKDOWN_NOTE"
folder: "25e447a4d8a6df4b48b4"
title: "Java note"
content: '''
  # Java note
  
  ## 引用变量
  - ``` java
    People man = new People();
    People woman = new People();
    People boy = man;
    ```
    `man`, `woman`, `boy` 应该称为**引用变量**， 引用变量并不保存对象的内容，而是指向对象的指针。
  - `==`是判定两个引用变量是否引用到堆上的同一个对象。或者是判定基础数据类型（int, long等）变量的值是否相等。
  - `equal`方法是判定两个对象的内容是否一样。
  
  ## static
  - 被`static`标记的方法为静态方法，不需要实例，可以直接通过类来调用。
  - 静态方法不能调用非静态的变量，同理， 静态方法不能调用非静态方法。
  - 静态变量是共享的，同一个类的所有实例共享一份静态变量，它们会在任何静态方法执行之前就初始化，没有被赋值时，会被设定为该变量所属的默认值。
  - `static`只能修饰内部类，如果修饰外部类，会编译错误
  - 内部类与静态内部类的区别：
    1. 静态内部类和静态方法一样，只能访问静态成员变量和方法。 普通内部类可以访问任意外部类的成员变量和方法。
    2. 静态内部类中可以声明不同成员变量和方法，但是普通内部类不能声明`static`成员变量和方法。
    3. 静态内部类可以单独初始化：
       ``` java
       Inner i = new Outer.Inner();
       ```
       普通内部类初始化：
       ``` java
       Outer o = new Outer();
       Inner i = new o.Inner();
       ```
      
  
  ## final
  - `final`类型的静态变量为常量。
  - `final`类型的变量一旦被赋值就不能再改。
  - `final`类型的方法不能被覆盖
  - `final`类型的类不能被继承
'''
tags: []
isStarred: false
createdAt: "2017-05-30T20:03:26.456Z"
updatedAt: "2017-06-02T05:53:47.062Z"
