type: "MARKDOWN_NOTE"
folder: "770b506064e20e1eb4bf"
title: "RPC 框架"
content: '''
  # RPC 框架
  
  RPC是指远程过程调用，也就是说两台服务器A，B，一个应用部署在A服务器上面，想要调用B服务器上应用提供的函数或者方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用呵传达调用的数据。
  - 首先，要解决通讯的问题，主要是通过在客户端（A服务器）和服务器（B服务器）之间建立TCP连接，远程过程调用的所有数据都在这个连接里传输。连接可以是按需连接，调用结束后断掉，也可以是长连接，多个远程过程调用共享同一个连接。
  - 第二，要解决寻址的问题，也就是说，A服务器上的应用怎么告诉底层的rpc框架。如何连接B服务器（如主机或者IP地址）以及特定的端口，方法的名称是什么，这样才能完成调用。比如基于Web服务协议栈的RPC，就提供一个endpoint URI，或者是从UDDI服务上查找。如果RMI调用的话，还需要一个RMI Registry来注册服务的地址。
  - 第三，当A服务器上的应用发起远程过程调用时，方法的参数需要通过底层的网络协议如TCP传递到B服务器，由于网络协议是基于二进制的，内存中的参数的值要序列化成二进制的形式，也就是序列化（Serialize）或编组（Marshal），通过寻址和传输讲序列化的二进制发送给B服务器。
  - 第四，B服务器收到请求后，需要对参数进行反序列化（序列化的逆操作），恢复为内存中的表达方式，然后找到对应的方法（寻址的一部分）进行本地调用，然后得到返回值。
  - 第五，返回值还要发送回A服务器上的应用，也需要经过序列化的方式发送，服务器A接到后，再反序列化，恢复为内存中的表达方式，交给A服务器上的应用
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-10-08T19:00:37.792Z"
updatedAt: "2017-10-08T20:14:14.203Z"
