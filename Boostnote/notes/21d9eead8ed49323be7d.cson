type: "MARKDOWN_NOTE"
folder: "25e447a4d8a6df4b48b4"
title: "python note"
content: '''
  # python note
  
  ## Features compare to static programming language
  - Two basic types: String and Numbers.
  - No declaration or data type definition is needed for variables.
  - python do not have `switch` statement, use `if ... elif ... else` instead.
  - `while` statement and `for` statement can have an optional `else` clause.
  - if you `break` out of a `for` or `while` loop, any corresponding loop `else` block is **not** execute.
  
  
  ## 3. Functions
  - when we declare a starred parameter such as `*param`, then all the positional arguments from that point till the end are collected as a **tuple** called *param*.
  - when we declare a double-starred parameter such as `**param`, then all the keyword arguments from that point till the end are collected as a **dictionary** called *param*.
  - `return` statement without a value is equivalent to `return None` statement.
  - Every function implicitly contains a `return None` statement at the end unless you have written your own `return` statement.
  - The `pass` statement is used in Python to indicate an empty block of statements.
  - A string on the first logical line of a function is the *docstring* for that function. Same to **modules** and **classes**.
  
  ## 4. Modules
  - Run `import os; print(os.getcwd())` to find out the current directory of your program.
  - `sys.path` which is same as the `PYTHONPATH` environment variable. The first string in `sys.path` is empty - this empty string indicates that the current directory is also part of `sys.path`.
  - `.pyc` these byte-compiled files are platform-independent.
  - If Python does not have permission to write to files in that directory, then `.pyc` files will *not* be created.
  - In general, *avoid* using the `from...import` statement, use `import` instead. In order to avoid name clashes and will be more readable.
  - Every Python modules has its `__name__` defined. If this is `__main__`, that implies that the module is being run standlone by the user.
  - Built-in `dir()` fuction return list of names defined by an *object*. (try `vars()` out)
  - `del` statement is used to *delete* a variable/name. And delete object will not in `dir()` result.
  - Packages are just folders of modules with a special `__init__.py` file.
  - Packages hold modules, modules hold fuctions and clazz, fuctions hold variable.
  
  ## 5. Data Structures - 4 built-in DS - *list, tuple, dictionary and set*
  - list is a mutable data type.
  - tuples are immutable data type like strings.
  - `empty = ()` and `single = (2, )` for 0 or 1 items tuple.
  - you can use only immutable objects (like strings) for the keys of a dictionary but you can use either immutable or mutable objects for the values of the dictionary.
  - dictionary is a mutable data type.
  - Lists, tuples and strings are examples of *sequences*.
  - The major features of sequences are *membership tests* (i.e. the `in` and `not in` expressions), *indexing operations* (i.e. `a[2][2]`) and *slicing operation* (i.e. `a[1:-1]`, `a[::2]`).
  - Sets are unordered collections of simple objects. Sets are mutable.
  - When you create an object and assign it to a variable, the variable only *refers* to the object and does not represent the object itself. The variable name points to that part of your computer's memory where the object is stored. This is called *binding* the name to object.
  - `a[1:3]` returns a slice of the sequence starting at position 1, includes position 2 but stops at position 3(but do not change the refer to the original sequence). `a[:]` returns a copy of whole sequence.
  - if you want to make a copy of sequences or complex objects (not simple objects such as integers), then you have to use the *slicing operation* or `copy()` fuction. Otherwise will refer to the same object.
'''
tags: []
isStarred: true
createdAt: "2017-05-19T21:52:01.308Z"
updatedAt: "2017-05-26T04:13:38.782Z"
